name: 编译zerotier

on:
  schedule:
    - cron: '0 3,20 * * *'
  workflow_dispatch:
jobs:
 check:
  runs-on: ubuntu-latest
  outputs:
    ver: ${{ steps.getversion.outputs.ver }}
    cver: ${{ steps.getversion.outputs.cver }}
  steps:
  - name: 检查更新
    id: getversion
    run: |
      ver=`curl https://api.github.com/repos/zerotier/ZeroTierOne/releases/latest | jq -r '.tag_name'`
      cver=`curl https://api.github.com/repos/lmq8267/ZeroTierOne/releases/latest | jq -r '.tag_name'`
      echo "ver=${ver}" >> $GITHUB_OUTPUT
      echo "cver=${cver}" >> $GITHUB_OUTPUT
 build:
    needs: check
    if: ${{ needs.check.outputs.ver != needs.check.outputs.cver }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - TARGET: arm7l-koolshare
            OS: ubuntu-latest
            GCC: arm-linux-musleabi
          - TARGET: arm7l-swrt
            OS: ubuntu-latest
            GCC: arm-linux-musleabi
          - TARGET: mipsel
            OS: ubuntu-latest
            GCC: mipsel-linux-musl
          - TARGET: mips
            OS: ubuntu-latest
            GCC: mips-linux-musl
    runs-on: ${{ matrix.OS }}
    env:
      TARGET: ${{ matrix.TARGET }}
      OS: ${{ matrix.OS }}
      GCC: ${{ matrix.GCC }}
    steps:
      - uses: actions/checkout@v3
      - name: 下载编译工具链
        run: |
          echo -e "\n\033[42;31;5;1m 开始克隆源码... \n\033[0m"
          git clone https://github.com/zerotier/ZeroTierOne -b ${{ steps.getversion.outputs.ver }} /opt/zt
          case $TARGET in 
              mipsel)
                MUSL_URI=mipsel-linux-musl-cross
                ;;
              arm7l-koolshare)
                MUSL_URI=arm-linux-musleabi-cross
                ;;
              arm7l-swrt)
                MUSL_URI=arm-linux-musleabi-cross
                ;;
              mips)
                MUSL_URI=mips-linux-musl-cross
                ;;
            esac
          echo "MUSL_URI=${MUSL_URI}" >> $GITHUB_ENV
          mkdir -p /opt/musl_gcc 
          echo -e "\n\033[42;31;5;1m 开始下载musl工具链.. \n\033[0m"
          wget -q -c https://musl.cc/$MUSL_URI.tgz -P /opt/musl_gcc/
          echo -e "\n\033[42;31;5;1m 开始解压musl工具链.. \n\033[0m"
          tar -xf /opt/musl_gcc/$MUSL_URI.tgz -C /opt/musl_gcc/
          echo -e "\n\033[42;31;5;1m 查看musl-gcc信息 \n\033[0m"
          /opt/musl_gcc/$MUSL_URI/bin/${{ matrix.GCC }}-gcc -v
      - 
        name: 编译zerotier
        shell: bash
        run: |
          cd /opt/zt
          echo -e "\n\033[42;31;5;1m 修改zerotier源码 \n\033[0m"
          sed -i 's|-fPIC -fPIE|-fPIC -fPIE -static|g' ./make-linux.mk
          sed -i '/include objects.mk/i    LDLIBS+=-latomic' ./make-linux.mk
          sed -i 's|override CFLAGS+=-march=armv5t -mfloat-abi=soft -msoft-float -mno-unaligned-access -marm|override CFLAGS+=-mfloat-abi=soft -msoft-float -mno-unaligned-access -marm|g' ./make-linux.mk
          sed -i 's|override CXXFLAGS+=-march=armv5t -mfloat-abi=soft -msoft-float -mno-unaligned-access -marm|override CXXFLAGS+=-mfloat-abi=soft -msoft-float -mno-unaligned-access -marm|g' ./make-linux.mk
          sed -i 's|override CFLAGS+=-mfloat-abi=hard -march=armv6zk -marm -mfpu=vfp -mno-unaligned-access -mtp=cp15 -mcpu=arm1176jzf-s|override CFLAGS+=-mfloat-abi=soft -msoft-float -mno-unaligned-access -marm|g' ./make-linux.mk
          sed -i 's|override CXXFLAGS+=-mfloat-abi=hard -march=armv6zk -marm -mfpu=vfp -fexceptions -mno-unaligned-access -mtp=cp15 -mcpu=arm1176jzf-s|override CXXFLAGS+=-mfloat-abi=soft -msoft-float -mno-unaligned-access -marm|g' ./make-linux.mk
          if [[ $TARGET == mips ]] ; then
          echo -e "\n\033[42;31;5;1m 修改mips架构密钥存储路径 \n\033[0m"
          sed -i 's|/var/lib/zerotier-one|/etc/storage/zerotier-one|g' ./osdep/OSUtils.cpp
          fi
          if [[ $TARGET == mipsel ]] ; then
          echo -e "\n\033[42;31;5;1m 修改mipsel架构密钥存储路径 \n\033[0m"
          sed -i 's|/var/lib/zerotier-one|/etc/storage/zerotier-one|g' ./osdep/OSUtils.cpp
          fi
          if [[ $TARGET == arm7l-koolshare ]] ; then
          echo -e "\n\033[42;31;5;1m 修改arm7l架构koolshare密钥存储路径 \n\033[0m"
          sed -i 's|/var/lib/zerotier-one|/koolshare/configs/zerotier-one|g' ./osdep/OSUtils.cpp
          fi
          if [[ $TARGET == arm7l-swrt ]] ; then
          echo -e "\n\033[42;31;5;1m 修改arm7l架构swrt密钥存储路径 \n\033[0m"
          sed -i 's|/var/lib/zerotier-one|/jffs/softcenter/etc/zerotier-one|g' ./osdep/OSUtils.cpp
          fi
          cat ./osdep/OSUtils.cpp | grep /zerotier-one
          MAC="$(grep -n "ioctl(sock,SIOCSIFHWADDR,(void" ./osdep/LinuxEthernetTap.cpp | head -2 | tail -1 | awk '{print $1}' | tr -d ": ")" && echo -e "\n\033[42;31;5;1m 删除第 ${t} 行 \n\033[0m" &&  sed -i "$((MAC)),+5d" ./osdep/LinuxEthernetTap.cpp && cat ./osdep/LinuxEthernetTap.cpp | grep MAC
          
          #sed -i 's|fprintf(stderr, "Error binding control plane to 0.0.0.0:%d\n", _primaryPort);|char command[1024];\n sprintf(command, "logger -t '\''【ZeroTier】'\'' '\''Error IPV4 binding control plane to 0.0.0.0:%d'\'' ", _primaryPort);\n system(command);|g' ./service/OneService.cpp
          #sed -i 's|fprintf(stderr, "Error binding control plane to [::]:%d\n", _primaryPort);|char command[1024];\n sprintf(command, "logger -t '\''【ZeroTier】'\'' '\''Error IPV6 binding control plane to [::]:%d'\'' ", _primaryPort);\n system(command);|g' ./service/OneService.cpp
          #sed -i 's|fprintf(stderr, "ERROR: Could not bind control plane. Exiting...\n");|char command[1024];\n sprintf(command, "logger -t '\''【ZeroTier】'\'' '\''ERROR: IPV4和IPV6 Could not bind control plane. Exiting...'\'' ", _primaryPort);\n system(command);|g' ./service/OneService.cpp
          #sed -i 's|fprintf(stderr, "Starting V6 Control Plane...\n");|char command[1024];\n sprintf(command, "logger -t '\''ZeroTier'\'' '\''now ipv6'\'' ");\n system(command);|g' ./service/OneService.cpp
          
          
          echo -e "\n\033[42;31;5;1m 设置编译环境变量 \n\033[0m"
          sudo timedatectl set-timezone "Asia/Shanghai"
          export PATH=$PATH:/opt/musl_gcc/${{ env.MUSL_URI }}/bin
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/musl_gcc/${{ env.MUSL_URI }}/${{ matrix.GCC }}/lib
          export CC=${{ matrix.GCC }}-gcc
          export CXX=${{ matrix.GCC }}-g++
          export AR=${{ matrix.GCC }}-ar
          export LD=${{ matrix.GCC }}-ld
          export RANLIB=${{ matrix.GCC }}-ranlib
          export strip=${{ matrix.GCC }}-strip
          export CFLAGS="-I /opt/musl_gcc/${{ env.MUSL_URI }}/${{ matrix.GCC }}/include -L /opt/musl_gcc/${{ env.MUSL_URI }}/${{ matrix.GCC }}/lib -Wl,--gc-sections -Os -ffunction-sections -fdata-sections -D_GNU_SOURCE -D_BSD_SOURCE -fPIE"
          export CXXFLAGS="$CFLAGS"
          export TARGET_CFLAGS=" -DNDEBUG -DBOOST_NO_FENV_H -DBOOST_DISABLE_ASSERTS"
          echo -e "\n\033[42;31;5;1m 开始编译... \n\033[0m"
          CC=${{ matrix.GCC }}-gcc \
          STRIP=${{ matrix.GCC }}-strip \
          ZT_STATIC=1 \
          OSTYPE="Linux" \
          make
      - 
        name: 剥离压缩
        run: |
          echo -e "\n\033[42;31;5;1m 开始下载指定版本upx \n\033[0m"
          git clone https://github.com/lmq8267/cloudflared.git /opt/st
          tar -xf /opt/st/upx-3.95-amd64_linux.tar.xz -C /opt
          chmod 777 /opt/upx-3.95-amd64_linux/upx
          tar -xf /opt/st/upx-4.1.0-amd64_linux.tar.xz -C /opt
          chmod 777 /opt/upx-4.1.0-amd64_linux/upx
          cd /opt/zt
          echo -e "\n\033[42;31;5;1m 查看二进制程序信息 \n\033[0m"
          file zerotier-one
          strings zerotier-one | grep /zerotier-one
          echo -e "\n\033[42;31;5;1m 查看原始体积 \n\033[0m"
          du -k zerotier-one
          echo -e "\n\033[42;31;5;1m 开始剥离... \n\033[0m"
          /opt/musl_gcc/${{ env.MUSL_URI }}/bin/${{ matrix.GCC }}-strip zerotier-one
          echo -e "\n\033[42;31;5;1m 查看剥离后的体积 \n\033[0m"
          du -k zerotier-one
          echo -e "\n\033[42;31;5;1m 开始upx压缩... \n\033[0m"
          if [[ $TARGET == mipsel ]] ; then
          /opt/upx-3.95-amd64_linux/upx --lzma --best zerotier-one
          else
          /opt/upx-4.1.0-amd64_linux/upx --lzma --best zerotier-one
          fi
          echo -e "\n\033[42;31;5;1m 查看压缩后的体积 \n\033[0m"
          du -k zerotier-one
          echo -e "\n\033[42;31;5;1m 编译时间：$(date '+%Y-%m-%d %H:%M:%S') \n\033[0m"
          echo "build_time=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
      - 
        name: 打包上传
        shell: bash
        run: |
         if [[ $TARGET == mips ]] || [[ $TARGET == mipsel ]] ; then
         mkdir -p /opt/bin/zerotier-one
         echo -e "\n\033[42;31;5;1m 打包padavan的zerotier \n\033[0m"
         cp /opt/zt/zerotier-one /opt/bin/zerotier-one/zerotier-one
         ln -sf /opt/bin/zerotier-one/zerotier-one /opt/bin/zerotier-one/zerotier-cli
         ln -sf /opt/bin/zerotier-one/zerotier-one /opt/bin/zerotier-one/zerotier-idtool
         cd /opt/bin
         if [[ $TARGET == mips ]] ; then
         tar czvf zerotier-mips.tar.gz zerotier-one
         else
         tar czvf zerotier.tar.gz zerotier-one
         fi
            if [[ $TARGET == mipsel ]] ; then
            echo $(md5sum /opt/bin/zerotier.tar.gz | awk '{print $1;}') >tarMD5.txt
            cd /opt/bin/zerotier-one
            echo $(md5sum /opt/bin/zerotier-one/zerotier-one | awk '{print $1;}') >MD5.txt
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git clone https://github.com/lmq8267/ZeroTierOne.git /opt/zero
            [ ! -d "/opt/zero/install/${{ needs.check.outputs.ver }}" ] && mkdir -p "/opt/zero/install/${{ needs.check.outputs.ver }}"
            cp -rf /opt/bin/zerotier-one/zerotier-one /opt/zero/install/${{ needs.check.outputs.ver }}/zerotier-one
            cp -rf /opt/bin/zerotier-one/MD5.txt /opt/zero/install/${{ needs.check.outputs.ver }}/MD5.txt
            cp -rf /opt/bin/zerotier.tar.gz /opt/zero/install/${{ needs.check.outputs.ver }}/zerotier.tar.gz
            cp -rf /opt/bin/tarMD5.txt /opt/zero/install/${{ needs.check.outputs.ver }}/tarMD5.txt
            cd /opt/zero
            if git status --porcelain | grep .; then
            git add .
            git commit -am "上传时间： $(date '+%Y-%m-%d %H:%M:%S')"
            git push --quiet "https://${{ secrets.c8 }}@github.com/lmq8267/ZeroTierOne.git"
            else
            echo -e "\n\033[42;31;5;1m 没有任何变动，无需上传提交！ \n\033[0m"
            fi 
            fi
            mkdir -p /opt/ipk
            wget -q -c https://github.com/lmq8267/ZeroTierOne/releases/download/1.12.2/zerotier_1.12.2-1_mipsel-3.4.ipk -P /opt/ipk/
            echo -e "\n\033[42;31;5;1m 开始打包Entware软件中心IPK安装包.. \n\033[0m"
            tar xzf /opt/ipk/zerotier_1.12.2-1_mipsel-3.4.ipk -C /opt/ipk/
            tar -xf /opt/ipk/data.tar.gz -C /opt/ipk/
            rm -rf /opt/ipk/opt/bin/zerotier-one /opt/ipk/data.tar.gz
            cp -rf /opt/bin/zerotier-one/zerotier-one /opt/ipk/opt/bin/zerotier-one
            cd /opt/ipk
            tar czvf /opt/ipk/data.tar.gz /opt/ipk/opt
            tar -czf zerotier_${{ needs.check.outputs.ver }}-1_mipsel-3.4.ipk data.tar.gz control.tar.gz debian-binary
         fi
      - 
        name: 打包梅林离线安装包
        shell: bash
        run: |
         if [[ $TARGET == arm7l-koolshare ]] ; then
         mkdir -p /opt/koolshare
         wget -q -c https://github.com/lmq8267/ZeroTierOne/releases/download/koolshare/zerotier1.12.2.tar.gz -P /opt/koolshare/
         echo -e "\n\033[42;31;5;1m 开始打包koolshare版.. \n\033[0m"
         tar -xf /opt/koolshare/zerotier1.12.2.tar.gz -C /opt/koolshare/
         rm -rf /opt/koolshare/zerotier/bin/zerotier-one
         cp -rf /opt/zt/zerotier-one /opt/koolshare/zerotier/bin/zerotier-one
         sed -i 's|安装主程序zerotier-one_1.12.2|安装主程序zerotier-one_${{ needs.check.outputs.ver }}|g' /opt/koolshare/zerotier/install.sh
         sed -i 's|1.12.2|${{ needs.check.outputs.ver }}|g' /opt/koolshare/zerotier/webs/Module_zerotier.asp
         cat /opt/koolshare/zerotier/webs/Module_zerotier.asp | grep ZeroTier
         cat /opt/koolshare/zerotier/install.sh | grep zerotier-one_
         cd /opt/koolshare
         tar czvf zerotier-${{ needs.check.outputs.ver }}.tar.gz zerotier
         fi

         if [[ $TARGET == arm7l-swrt ]] ; then
         mkdir -p /opt/swrt
         wget -q -c https://github.com/lmq8267/ZeroTierOne/releases/download/swrt/zerotier1.12.2.tar.gz -P /opt/swrt/
         echo -e "\n\033[42;31;5;1m 开始打包swrt版.. \n\033[0m"
         tar -xf /opt/swrt/zerotier1.12.2.tar.gz -C /opt/swrt/
         rm -rf /opt/swrt/zerotier/bin/zerotier-one
         cp -rf /opt/zt/zerotier-one /opt/swrt/zerotier/bin/zerotier-one
         sed -i 's|version=1.12.2|version=${{ needs.check.outputs.ver }}|g' /opt/swrt/zerotier/install.sh
         cat /opt/swrt/zerotier/install.sh | grep version=
         cd /opt/swrt
         tar czvf zerotier-${{ needs.check.outputs.ver }}.tar.gz zerotier
         fi
      - 
        name: 发布prerelease
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.c8 }}
          body: |
           > ### 编译时间：${{ env.build_time }}
           - **密钥存储位置已改为：/jffs/softcenter/etc/zerotier-one**
           - **这是适用于arm7l架构P大的swrt梅林固件软件中心的离线安装包**

           **[官方更新说明](https://github.com/zerotier/ZeroTierOne/releases)**
          prerelease: true
          tag_name: swrt
          files: /opt/swrt/zerotier-${{ needs.check.outputs.ver }}.tar.gz
      - 
        name: 发布prerelease
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.c8 }}
          body: |
           > ### 编译时间：${{ env.build_time }}
           - **密钥存储位置已改为：/koolshare/configs/zerotier-one**
           - **这是适用于arm7l架构koolshare的梅林固件384/386软件中心的离线安装包**

           **[官方更新说明](https://github.com/zerotier/ZeroTierOne/releases)**
          prerelease: true
          tag_name: koolshare
          files: /opt/koolshare/zerotier-${{ needs.check.outputs.ver }}.tar.gz
      - 
        name: 发布release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.c8 }}
          body: |
           > ### 编译时间：${{ env.build_time }}
           - **密钥存储位置已改为：/etc/storage/zerotier-one**
           - **这是适用于mipsel架构的二进制文件**
           - **zerotier-mips.tar.gz为mips架构的二进制文件**

           **[官方更新说明](https://github.com/zerotier/ZeroTierOne/releases)**
          tag_name: ${{ steps.getversion.outputs.ver }}
          files: |
            /opt/bin/zerotier-mips.tar.gz
            /opt/bin/zerotier.tar.gz
            /opt/bin/tarMD5.txt
            /opt/bin/zerotier-one/zerotier-one
            /opt/bin/zerotier-one/MD5.txt
            /opt/ipk/zerotier_${{ needs.check.outputs.ver }}-1_mipsel-3.4.ipk
      - 
        name: 删除工作流
        uses: GitRML/delete-workflow-runs@main
        with:
         token: ${{ secrets.c8 }}
         retain_days: 2
         keep_minimum_runs: 0
